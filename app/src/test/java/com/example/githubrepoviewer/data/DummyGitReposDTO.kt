package com.example.githubrepoviewer.data

import com.example.githubrepoviewer.data.network.dto.git_repos_dto.GitReposDTO
import com.example.githubrepoviewer.data.network.dto.git_repos_dto.GitReposDTOItem
import com.example.githubrepoviewer.data.network.dto.git_repos_dto.Owner

object DummyGitReposDTO {


    val gitReposDTO = GitReposDTO().apply {
        add(dummyGitReposDTOItem)
        add(dummy2)
        add(dummy3)
        add(dummy4)
        add(dummy5)
    }

}// Create a dummy instance of Owner if required by GitReposDTOItem
val dummyOwner = Owner(
    // Assume the Owner class has these fields. Replace them with actual fields and dummy values.
    login = "dummy1Login",
    id = 124,
    node_id = "dummyNodeId",
    avatar_url = "https://dummyavatarurl.com",
    gravatar_id = "",
    url = "https://dummyurl.com",
    html_url = "https://dummyhtmlurl.com",
    followers_url = "https://dummyfollowersurl.com",
    following_url = "https://dummyfollowingurl.com",
    gists_url = "https://dummygistsurl.com",
    starred_url = "https://dummystarredurl.com",
    subscriptions_url = "https://dummysubscriptionsurl.com",
    organizations_url = "https://dummyorganizationsurl.com",
    repos_url = "https://dummyreposurl.com",
    events_url = "https://dummyeventsurl.com",
    received_events_url = "https://dummyreceivedeventsurl.com",
    type = "User",
    site_admin = false
)

val dummyOwner2 = Owner(
    // Assume the Owner class has these fields. Replace them with actual fields and dummy values.
    login = "dummy2Login",
    id = 125,
    node_id = "dummyNodeId",
    avatar_url = "https://dummyavatarurl.com",
    gravatar_id = "",
    url = "https://dummyurl.com",
    html_url = "https://dummyhtmlurl.com",
    followers_url = "https://dummyfollowersurl.com",
    following_url = "https://dummyfollowingurl.com",
    gists_url = "https://dummygistsurl.com",
    starred_url = "https://dummystarredurl.com",
    subscriptions_url = "https://dummysubscriptionsurl.com",
    organizations_url = "https://dummyorganizationsurl.com",
    repos_url = "https://dummyreposurl.com",
    events_url = "https://dummyeventsurl.com",
    received_events_url = "https://dummyreceivedeventsurl.com",
    type = "User",
    site_admin = false
)

val dummyOwner3 = Owner(
    // Assume the Owner class has these fields. Replace them with actual fields and dummy values.
    login = "dummy3Login",
    id = 126,
    node_id = "dummyNodeId",
    avatar_url = "https://dummyavatarurl.com",
    gravatar_id = "",
    url = "https://dummyurl.com",
    html_url = "https://dummyhtmlurl.com",
    followers_url = "https://dummyfollowersurl.com",
    following_url = "https://dummyfollowingurl.com",
    gists_url = "https://dummygistsurl.com",
    starred_url = "https://dummystarredurl.com",
    subscriptions_url = "https://dummysubscriptionsurl.com",
    organizations_url = "https://dummyorganizationsurl.com",
    repos_url = "https://dummyreposurl.com",
    events_url = "https://dummyeventsurl.com",
    received_events_url = "https://dummyreceivedeventsurl.com",
    type = "User",
    site_admin = false
)

val dummyOwner4 = Owner(
    // Assume the Owner class has these fields. Replace them with actual fields and dummy values.
    login = "dummy4Login",
    id = 127,
    node_id = "dummyNodeId",
    avatar_url = "https://dummyavatarurl.com",
    gravatar_id = "",
    url = "https://dummyurl.com",
    html_url = "https://dummyhtmlurl.com",
    followers_url = "https://dummyfollowersurl.com",
    following_url = "https://dummyfollowingurl.com",
    gists_url = "https://dummygistsurl.com",
    starred_url = "https://dummystarredurl.com",
    subscriptions_url = "https://dummysubscriptionsurl.com",
    organizations_url = "https://dummyorganizationsurl.com",
    repos_url = "https://dummyreposurl.com",
    events_url = "https://dummyeventsurl.com",
    received_events_url = "https://dummyreceivedeventsurl.com",
    type = "User",
    site_admin = false
)

val dummyOwner5 = Owner(
    // Assume the Owner class has these fields. Replace them with actual fields and dummy values.
    login = "dummy5Login",
    id = 128,
    node_id = "dummyNodeId",
    avatar_url = "https://dummyavatarurl.com",
    gravatar_id = "",
    url = "https://dummyurl.com",
    html_url = "https://dummyhtmlurl.com",
    followers_url = "https://dummyfollowersurl.com",
    following_url = "https://dummyfollowingurl.com",
    gists_url = "https://dummygistsurl.com",
    starred_url = "https://dummystarredurl.com",
    subscriptions_url = "https://dummysubscriptionsurl.com",
    organizations_url = "https://dummyorganizationsurl.com",
    repos_url = "https://dummyreposurl.com",
    events_url = "https://dummyeventsurl.com",
    received_events_url = "https://dummyreceivedeventsurl.com",
    type = "User",
    site_admin = false
)

// Create a dummy instance of GitReposDTOItem
val dummyGitReposDTOItem = GitReposDTOItem(
    id = 1,
    archiveUrl = "https://archiveurl.com",
    assigneesUrl = "https://assigneesurl.com",
    blobsUrl = "https://blobsurl.com",
    branchesUrl = "https://branchesurl.com",
    collaboratorsUrl = "https://collaboratorsurl.com",
    commentsUrl = "https://commentsurl.com",
    commitsUrl = "https://commitsurl.com",
    compareUrl = "https://compareurl.com",
    contentsUrl = "https://contentsurl.com",
    contributorsUrl = "https://contributorsurl.com",
    deploymentsUrl = "https://deploymentsurl.com",
    description = "Dummy description",
    downloadsUrl = "https://downloadsurl.com",
    eventsUrl = "https://eventsurl.com",
    fork = false,
    forksUrl = "https://forksurl.com",
    fullName = "DummyFullName",
    gitCommitsUrl = "https://gitcommitsurl.com",
    gitRefsUrl = "https://gitrefsurl.com",
    gitTagsUrl = "https://gittagsurl.com",
    hooksUrl = "https://hooksurl.com",
    htmlUrl = "https://htmlurl.com",
    issueCommentUrl = "https://issuecommenturl.com",
    issueEventsUrl = "https://issueeventsurl.com",
    issuesUrl = "https://issuesurl.com",
    keysUrl = "https://keysurl.com",
    labelsUrl = "https://labelsurl.com",
    languagesUrl = "https://languagesurl.com",
    mergesUrl = "https://mergesurl.com",
    milestonesUrl = "https://milestonesurl.com",
    name = "DummyName",
    nodeId = "DummyNodeId",
    notificationsUrl = "https://notificationsurl.com",
    owner = dummyOwner,
    isPrivate = false,
    pullsUrl = "https://pullsurl.com",
    releasesUrl = "https://releasesurl.com",
    stargazersUrl = "https://stargazersurl.com",
    statusesUrl = "https://statusesurl.com",
    subscribersUrl = "https://subscribersurl.com",
    subscriptionUrl = "https://subscriptionurl.com",
    tagsUrl = "https://tagsurl.com",
    teamsUrl = "https://teamsurl.com",
    treesUrl = "https://treesurl.com",
    url = "https://url.com"
)

val dummy2 = GitReposDTOItem(
    id = 2,
    archiveUrl = "https://archiveurl.com",
    assigneesUrl = "https://assigneesurl.com",
    blobsUrl = "https://blobsurl.com",
    branchesUrl = "https://branchesurl.com",
    collaboratorsUrl = "https://collaboratorsurl.com",
    commentsUrl = "https://commentsurl.com",
    commitsUrl = "https://commitsurl.com",
    compareUrl = "https://compareurl.com",
    contentsUrl = "https://contentsurl.com",
    contributorsUrl = "https://contributorsurl.com",
    deploymentsUrl = "https://deploymentsurl.com",
    description = "Dummy description",
    downloadsUrl = "https://downloadsurl.com",
    eventsUrl = "https://eventsurl.com",
    fork = false,
    forksUrl = "https://forksurl.com",
    fullName = "DummyFullName",
    gitCommitsUrl = "https://gitcommitsurl.com",
    gitRefsUrl = "https://gitrefsurl.com",
    gitTagsUrl = "https://gittagsurl.com",
    hooksUrl = "https://hooksurl.com",
    htmlUrl = "https://htmlurl.com",
    issueCommentUrl = "https://issuecommenturl.com",
    issueEventsUrl = "https://issueeventsurl.com",
    issuesUrl = "https://issuesurl.com",
    keysUrl = "https://keysurl.com",
    labelsUrl = "https://labelsurl.com",
    languagesUrl = "https://languagesurl.com",
    mergesUrl = "https://mergesurl.com",
    milestonesUrl = "https://milestonesurl.com",
    name = "DummyName",
    nodeId = "DummyNodeId",
    notificationsUrl = "https://notificationsurl.com",
    owner = dummyOwner2,
    isPrivate = false,
    pullsUrl = "https://pullsurl.com",
    releasesUrl = "https://releasesurl.com",
    stargazersUrl = "https://stargazersurl.com",
    statusesUrl = "https://statusesurl.com",
    subscribersUrl = "https://subscribersurl.com",
    subscriptionUrl = "https://subscriptionurl.com",
    tagsUrl = "https://tagsurl.com",
    teamsUrl = "https://teamsurl.com",
    treesUrl = "https://treesurl.com",
    url = "https://url.com"
)

val dummy3 = GitReposDTOItem(
    id = 3,
    archiveUrl = "https://archiveurl.com",
    assigneesUrl = "https://assigneesurl.com",
    blobsUrl = "https://blobsurl.com",
    branchesUrl = "https://branchesurl.com",
    collaboratorsUrl = "https://collaboratorsurl.com",
    commentsUrl = "https://commentsurl.com",
    commitsUrl = "https://commitsurl.com",
    compareUrl = "https://compareurl.com",
    contentsUrl = "https://contentsurl.com",
    contributorsUrl = "https://contributorsurl.com",
    deploymentsUrl = "https://deploymentsurl.com",
    description = "Dummy description",
    downloadsUrl = "https://downloadsurl.com",
    eventsUrl = "https://eventsurl.com",
    fork = false,
    forksUrl = "https://forksurl.com",
    fullName = "DummyFullName",
    gitCommitsUrl = "https://gitcommitsurl.com",
    gitRefsUrl = "https://gitrefsurl.com",
    gitTagsUrl = "https://gittagsurl.com",
    hooksUrl = "https://hooksurl.com",
    htmlUrl = "https://htmlurl.com",
    issueCommentUrl = "https://issuecommenturl.com",
    issueEventsUrl = "https://issueeventsurl.com",
    issuesUrl = "https://issuesurl.com",
    keysUrl = "https://keysurl.com",
    labelsUrl = "https://labelsurl.com",
    languagesUrl = "https://languagesurl.com",
    mergesUrl = "https://mergesurl.com",
    milestonesUrl = "https://milestonesurl.com",
    name = "DummyName",
    nodeId = "DummyNodeId",
    notificationsUrl = "https://notificationsurl.com",
    owner = dummyOwner3,
    isPrivate = false,
    pullsUrl = "https://pullsurl.com",
    releasesUrl = "https://releasesurl.com",
    stargazersUrl = "https://stargazersurl.com",
    statusesUrl = "https://statusesurl.com",
    subscribersUrl = "https://subscribersurl.com",
    subscriptionUrl = "https://subscriptionurl.com",
    tagsUrl = "https://tagsurl.com",
    teamsUrl = "https://teamsurl.com",
    treesUrl = "https://treesurl.com",
    url = "https://url.com"
)
val dummy4 = GitReposDTOItem(
    id = 4,
    archiveUrl = "https://archiveurl.com",
    assigneesUrl = "https://assigneesurl.com",
    blobsUrl = "https://blobsurl.com",
    branchesUrl = "https://branchesurl.com",
    collaboratorsUrl = "https://collaboratorsurl.com",
    commentsUrl = "https://commentsurl.com",
    commitsUrl = "https://commitsurl.com",
    compareUrl = "https://compareurl.com",
    contentsUrl = "https://contentsurl.com",
    contributorsUrl = "https://contributorsurl.com",
    deploymentsUrl = "https://deploymentsurl.com",
    description = "Dummy description",
    downloadsUrl = "https://downloadsurl.com",
    eventsUrl = "https://eventsurl.com",
    fork = false,
    forksUrl = "https://forksurl.com",
    fullName = "DummyFullName",
    gitCommitsUrl = "https://gitcommitsurl.com",
    gitRefsUrl = "https://gitrefsurl.com",
    gitTagsUrl = "https://gittagsurl.com",
    hooksUrl = "https://hooksurl.com",
    htmlUrl = "https://htmlurl.com",
    issueCommentUrl = "https://issuecommenturl.com",
    issueEventsUrl = "https://issueeventsurl.com",
    issuesUrl = "https://issuesurl.com",
    keysUrl = "https://keysurl.com",
    labelsUrl = "https://labelsurl.com",
    languagesUrl = "https://languagesurl.com",
    mergesUrl = "https://mergesurl.com",
    milestonesUrl = "https://milestonesurl.com",
    name = "DummyName",
    nodeId = "DummyNodeId",
    notificationsUrl = "https://notificationsurl.com",
    owner = dummyOwner4,
    isPrivate = false,
    pullsUrl = "https://pullsurl.com",
    releasesUrl = "https://releasesurl.com",
    stargazersUrl = "https://stargazersurl.com",
    statusesUrl = "https://statusesurl.com",
    subscribersUrl = "https://subscribersurl.com",
    subscriptionUrl = "https://subscriptionurl.com",
    tagsUrl = "https://tagsurl.com",
    teamsUrl = "https://teamsurl.com",
    treesUrl = "https://treesurl.com",
    url = "https://url.com"
)

val dummy5 = GitReposDTOItem(
    id = 5,
    archiveUrl = "https://archiveurl.com",
    assigneesUrl = "https://assigneesurl.com",
    blobsUrl = "https://blobsurl.com",
    branchesUrl = "https://branchesurl.com",
    collaboratorsUrl = "https://collaboratorsurl.com",
    commentsUrl = "https://commentsurl.com",
    commitsUrl = "https://commitsurl.com",
    compareUrl = "https://compareurl.com",
    contentsUrl = "https://contentsurl.com",
    contributorsUrl = "https://contributorsurl.com",
    deploymentsUrl = "https://deploymentsurl.com",
    description = "Dummy description",
    downloadsUrl = "https://downloadsurl.com",
    eventsUrl = "https://eventsurl.com",
    fork = false,
    forksUrl = "https://forksurl.com",
    fullName = "DummyFullName",
    gitCommitsUrl = "https://gitcommitsurl.com",
    gitRefsUrl = "https://gitrefsurl.com",
    gitTagsUrl = "https://gittagsurl.com",
    hooksUrl = "https://hooksurl.com",
    htmlUrl = "https://htmlurl.com",
    issueCommentUrl = "https://issuecommenturl.com",
    issueEventsUrl = "https://issueeventsurl.com",
    issuesUrl = "https://issuesurl.com",
    keysUrl = "https://keysurl.com",
    labelsUrl = "https://labelsurl.com",
    languagesUrl = "https://languagesurl.com",
    mergesUrl = "https://mergesurl.com",
    milestonesUrl = "https://milestonesurl.com",
    name = "DummyName",
    nodeId = "DummyNodeId",
    notificationsUrl = "https://notificationsurl.com",
    owner = dummyOwner5,
    isPrivate = false,
    pullsUrl = "https://pullsurl.com",
    releasesUrl = "https://releasesurl.com",
    stargazersUrl = "https://stargazersurl.com",
    statusesUrl = "https://statusesurl.com",
    subscribersUrl = "https://subscribersurl.com",
    subscriptionUrl = "https://subscriptionurl.com",
    tagsUrl = "https://tagsurl.com",
    teamsUrl = "https://teamsurl.com",
    treesUrl = "https://treesurl.com",
    url = "https://url.com"
)